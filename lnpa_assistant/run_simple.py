import os
import sys
import subprocess

def check_and_install():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤"""
    packages = [
        "gpt4all",
        "PyPDF2", 
        "python-docx",
        "beautifulsoup4",
        "html2text",
        "lxml"
    ]
    
    print("üîß –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–∞–∫–µ—Ç—ã...")
    
    for package in packages:
        try:
            if package == "python-docx":
                import docx
            else:
                __import__(package.replace("-", ""))
            print(f"‚úÖ {package} - —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        except ImportError:
            print(f"üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é {package}...")
            try:
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º py –∫–æ–º–∞–Ω–¥—É –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
                result = subprocess.run([
                    sys.executable, "-m", "pip", "install", package
                ], capture_output=True, text=True)
                
                if result.returncode == 0:
                    print(f"‚úÖ {package} - —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ {package}: {result.stderr}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def main():
    print("ü§ñ –ó–∞–ø—É—Å–∫ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –õ–ù–ü–ê")
    print("=" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞–∫–µ—Ç—ã
    check_and_install()
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    docs_dir = "documents"
    if not os.path.exists(docs_dir):
        os.makedirs(docs_dir)
        print(f"\nüìÅ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ '{docs_dir}'")
        print("–î–æ–±–∞–≤—å—Ç–µ –≤ –Ω–µ–µ —Ñ–∞–π–ª—ã –õ–ù–ü–ê (PDF, DOCX, HTML, TXT)")
        input("–ù–∞–∂–º–∏—Ç–µ Enter –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤...")
    
    # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã
    files = os.listdir(docs_dir)
    if not files:
        print("‚ùå –ü–∞–ø–∫–∞ documents –ø—É—Å—Ç–∞. –î–æ–±–∞–≤—å—Ç–µ —Ñ–∞–π–ª—ã –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–æ–≤–∞.")
        return
    
    print(f"\nüìÅ –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(files)}")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª
    try:
        from assistant_core import LNPAssistant
        assistant = LNPAssistant()
        assistant.run()
    except ImportError:
        print("‚ùå –û—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω. –ó–∞–ø—É—Å–∫–∞—é –ø—Ä–æ—Å—Ç–æ–π —Ä–µ–∂–∏–º...")
        simple_mode()

def simple_mode():
    """–ü—Ä–æ—Å—Ç–æ–π —Ä–µ–∂–∏–º –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print("\nüîç –ü—Ä–æ—Å—Ç–æ–π —Ä–µ–∂–∏–º —á—Ç–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
    
    docs_dir = "documents"
    for filename in os.listdir(docs_dir):
        filepath = os.path.join(docs_dir, filename)
        print(f"\nüìÑ –§–∞–π–ª: {filename}")
        
        # –ü—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
        size = os.path.getsize(filepath)
        print(f"üìè –†–∞–∑–º–µ—Ä: {size} –±–∞–π—Ç")
        
        # –ü—ã—Ç–∞–µ–º—Å—è –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã
        if filename.lower().endswith('.txt'):
            try:
                with open(filepath, 'r', encoding='utf-8') as f:
                    content = f.read(500)  # –ü–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤
                    print(f"üìù –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {content}...")
            except:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª")

if __name__ == "__main__":
    main()